                101   $LIST
                 -1   $include(LCD_4bit.inc)
0078              1   cseg
0078              2   
0078              3   ; When using a 22.1184MHz crystal in fast mode
0078              4   ; one cycle takes 1.0/22.1184MHz = 45.21123 ns
0078              5   
0078              6   ;---------------------------------;
0078              7   ; Wait 40 microseconds            ;
0078              8   ;---------------------------------;
0078              9   Wait40uSec:
0078 C000        10            push AR0
007A 78B1        11            mov R0, #177
007C             12   L0: 
007C 00          13            nop
007D 00          14            nop
007E D8FC        15            djnz R0, L0 ; 1+1+3 cycles->5*45.21123ns*177=40us
0080 D000        16            pop AR0
0082 22          17       ret
0083             18   
0083             19   ;---------------------------------;
0083             20   ; Wait 'R2' milliseconds          ;
0083             21   ;---------------------------------;
                 22   Wait_Milli_Seconds mac
                 23   	push AR2
                 24   	mov R2, %0
                 25   	lcall ?Wait_Milli_Seconds
                 26   	pop AR2
                 27   endmac
0083             28   
0083             29   ?Wait_Milli_Seconds:
0083 C000        30            push AR0
0085 C001        31            push AR1
0087 792D        32   L3: mov R1, #45
0089 78A6        33   L2: mov R0, #166
008B D8FE        34   L1: djnz R0, L1 ; 3 cycles->3*45.21123ns*166=22.51519us
008D D9FA        35       djnz R1, L2 ; 22.51519us*45=1.013ms
008F DAF6        36       djnz R2, L3 ; number of millisecons to wait passed in R2
0091 D001        37       pop AR1
0093 D000        38       pop AR0
0095 22          39       ret
0096             40            
0096             41   ;---------------------------------;
0096             42   ; Toggles the 'E' pin in the LCD  ;
0096             43   ;---------------------------------;
0096             44   LCD_pulse:
0096 D2B3        45            setb LCD_E
0098 120078      46            lcall Wait40uSec
009B C2B3        47            clr LCD_E
009D 22          48       ret
009E             49   
009E             50   ;---------------------------------;
009E             51   ; Writes acc to LCD in 4-bit mode ;
009E             52   ;---------------------------------;
009E             53   LCD_byte:
009E             54            ; Write high 4 bits first
009E A2E7        55            mov c, ACC.7
00A0 92B7        56            mov LCD_D7, c
00A2 A2E6        57            mov c, ACC.6
00A4 92B6        58            mov LCD_D6, c
00A6 A2E5        59            mov c, ACC.5
00A8 92B5        60            mov LCD_D5, c
00AA A2E4        61            mov c, ACC.4
00AC 92B4        62            mov LCD_D4, c
00AE 120096      63       lcall LCD_pulse
00B1 120078      64       lcall Wait40uSec
00B4             65            ; Write low 4 bits next
00B4 A2E3        66            mov c, ACC.3
00B6 92B7        67            mov LCD_D7, c
00B8 A2E2        68            mov c, ACC.2
00BA 92B6        69            mov LCD_D6, c
00BC A2E1        70            mov c, ACC.1
00BE 92B5        71            mov LCD_D5, c
00C0 A2E0        72            mov c, ACC.0
00C2 92B4        73            mov LCD_D4, c
00C4 120096      74       lcall LCD_pulse
00C7 22          75            ret
00C8             76   
00C8             77   ;---------------------------------;
00C8             78   ; Write data to LCD               ;
00C8             79   ;---------------------------------;
                 80   WriteData mac
                 81   	mov a, %0
                 82   	lcall ?WriteData
                 83   endmac
00C8             84            
00C8             85   ?WriteData:
00C8 D2B2        86            setb LCD_RS
00CA 02009E      87            ljmp LCD_byte
00CD             88   
00CD             89   ;---------------------------------;
00CD             90   ; Write command to LCD            ;
00CD             91   ;---------------------------------;
                 92   WriteCommand mac
                 93   	mov a, %0
                 94   	lcall ?WriteCommand
                 95   endmac
00CD             96   
00CD             97   ?WriteCommand:
00CD C2B2        98            clr LCD_RS
00CF 02009E      99            ljmp LCD_byte
00D2            100   
00D2            101   ;---------------------------------;
00D2            102   ; Configure LCD in 4-bit mode     ;
00D2            103   ;---------------------------------;
00D2            104   LCD_4BIT:
00D2 C2B3       105            clr LCD_E   ; Resting state of LCD's enable pin is zero
00D4            106            ; clr LCD_RW  ; Only writing to the LCD.  Tie this pin to ground
00D4            107            
00D4            108            ; After power on, let the LCD start up before initializing
00D4            109            ; NOTE: the preprogrammed power-on delay of 16 ms on the AT89LP51RC2
00D4            110            ; seems to be enough.  That is why this line is commented out.
00D4            111            ; Wait_Milli_Seconds(#40)
00D4            112            
00D4            113            ; First make sure the LCD is in 8-bit mode and then change to 4-bit mode
00D4 7433       114            mov a, #0x33
00D6 1200CD     114            lcall ?WriteCommand
00D9 7433       115            mov a, #0x33
00DB 1200CD     115            lcall ?WriteCommand
00DE 7432       116            mov a, #0x32
00E0 1200CD     116            lcall ?WriteCommand ; change to 4-bit mode
00E3            117   
00E3            118            ; Configure the LCD
00E3 7428       119            mov a, #0x28
00E5 1200CD     119            lcall ?WriteCommand
00E8 740C       120            mov a, #0x0c
00EA 1200CD     120            lcall ?WriteCommand
00ED 7401       121            mov a, #0x01
00EF 1200CD     121            lcall ?WriteCommand ;  Clear screen command (takes some time)
00F2            122   
00F2            123       ;Wait for the clear screen command to finish.
00F2 C002       124            push AR2
00F4 7A02       124            mov R2, #2
00F6 120083     124            lcall ?Wait_Milli_Seconds
00F9 D002       124            pop AR2
00FB 22         125       ret
00FC            126   
00FC            127   ;---------------------------------;
00FC            128   ; Send a constant string to LCD   ;
00FC            129   ;---------------------------------;
                130   Send_Constant_String mac
                131   	push dph
                132   	push dpl
                133   	push acc
                134   	mov dptr, %0
                135   	lcall ?Send_Constant_String
                136   	pop acc
                137   	pop dpl
                138   	pop dph
                139   endmac
00FC            140   
00FC            141   ?Send_Constant_String:
00FC E4         142       clr a
00FD 93         143       movc a, @a+dptr
00FE 6006       144       jz ?Send_Constant_String_Done
0100 1200C8     145       lcall ?WriteData
0103 A3         146       inc dptr
0104 80F6       147       sjmp ?Send_Constant_String
0106            148   ?Send_Constant_String_Done:
0106 22         149       ret  
0107            150   
0107            151   ;---------------------------------;
0107            152   ; Set LCD cursor at row, column   ;
0107            153   ;---------------------------------;
                154   Set_Cursor mac
                155   	push acc
                156   	mov a, #%1
                157   	dec a
                158   	lcall ?Set_Cursor_%0 ; Select column and row
                159   	pop acc
                160   endmac
0107            161   
0107            162   ?Set_Cursor_2:
0107 4440       163            orl a, #01000000B
0109            164   ?Set_Cursor_1:
0109 4480       165            orl a, #10000000B
010B 0200CD     166            ljmp ?WriteCommand ; Select column and row
010E            167   
010E            168   ;---------------------------------;
010E            169   ; Display a BCD number in the LCD ;
010E            170   ;---------------------------------;
                171   Display_BCD mac
                172   	push ar0
                173   	mov r0, %0
                174   	lcall ?Display_BCD
                175   	pop ar0
                176   endmac
010E            177   
010E            178   ?Display_BCD:
010E C0E0       179            push acc
0110            180            ; Write most significant digit
0110 E8         181            mov a, r0
0111 C4         182            swap a
0112 540F       183            anl a, #0fh
0114 4430       184            orl a, #30h
0116 1200C8     185            lcall ?WriteData
0119            186            ; write least significant digit
0119 E8         187            mov a, r0
011A 540F       188            anl a, #0fh
011C 4430       189            orl a, #30h
011E 1200C8     190            lcall ?WriteData
0121 D0E0       191            pop acc
0123 22         192            ret
0124            193   
0124            194   ;------------------------------------;
0124            195   ; Display a char in the LCD          ;
0124            196   ;------------------------------------;
                197   Display_char mac
                198   	push acc
                199   	mov a, %0
                200   	lcall ?WriteData
                201   	pop acc
                202   endmac
0124            203   
                105   $LIST
                 -1   $include(math32.inc)
                546   $LIST
